# Generated by Django 2.0 on 2020-05-05 20:11

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Assignment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assisment_name', models.CharField(max_length=100)),
                ('discription', models.CharField(max_length=100)),
                ('assignment_pdf', models.FileField(max_length=255, upload_to='static/assignments')),
                ('is_verified', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'assignment_info',
            },
        ),
        migrations.CreateModel(
            name='AssignmentResponse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assignment_pdf', models.FileField(max_length=255, upload_to='static/assignmentsresposne')),
                ('remark', models.CharField(max_length=40)),
                ('marks', models.CharField(max_length=40)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('assisment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='studentwebsite.Assignment')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'assignment_response_info',
            },
        ),
        migrations.CreateModel(
            name='ClassRoom',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('class_name', models.CharField(max_length=20)),
                ('class_code', models.CharField(max_length=20)),
                ('live_classes', models.BooleanField(default=True)),
                ('videos', models.BooleanField(default=True)),
                ('assignment', models.BooleanField(default=True)),
                ('online_test', models.BooleanField(default=True)),
                ('attendance', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'class_info',
            },
        ),
        migrations.CreateModel(
            name='Institute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('institute_code', models.CharField(max_length=100)),
                ('student_code', models.CharField(max_length=100)),
                ('teacher_code', models.CharField(max_length=100)),
                ('institute_name', models.CharField(max_length=40)),
                ('profile_image', models.FileField(max_length=255, upload_to='static/institute_logo')),
                ('is_verified', models.BooleanField(default=False)),
                ('is_delete', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'institute_info',
            },
        ),
        migrations.CreateModel(
            name='LiveClass',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('live_class_name', models.CharField(max_length=40)),
                ('live_class_description', models.CharField(max_length=40)),
                ('meeting_id', models.CharField(max_length=200)),
                ('meeting_URL', models.CharField(max_length=400)),
                ('meeting_start_at', models.DateTimeField(auto_now_add=True)),
                ('meeting_end_at', models.DateTimeField(auto_now_add=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('class_room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='studentwebsite.ClassRoom')),
            ],
            options={
                'db_table': 'liveclass_info',
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject_name', models.CharField(max_length=20)),
                ('subject_code', models.CharField(max_length=20)),
                ('subject_logo', models.CharField(max_length=20)),
                ('class_room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='studentwebsite.ClassRoom')),
            ],
            options={
                'db_table': 'subject_info',
            },
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('video_name', models.CharField(max_length=40)),
                ('video_url', models.CharField(max_length=200)),
                ('is_verified', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('video_sub', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='studentwebsite.Subject')),
            ],
            options={
                'db_table': 'video_info',
            },
        ),
        migrations.AddField(
            model_name='classroom',
            name='institute',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='studentwebsite.Institute'),
        ),
        migrations.AddField(
            model_name='assignment',
            name='assisment_subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='studentwebsite.Subject'),
        ),
        migrations.AddField(
            model_name='assignment',
            name='teacher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
